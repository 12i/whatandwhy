#! /bin/bash
color1="\e[0;31;40m"
color2="\e[0;32;40m"
color3="\e[0;33;40m"
color4="\e[0;34;40m"
color5="\e[0;35;40m"
color6="\e[0;37;40m"

function logo()
{
  echo -e "$color2            ██                    ██ "
  echo -e "$color3 ██      ██ ██▄████▄   ▄█████▄  ███████"
  echo -e "$color4 ▀█  ██  █▀ ██▀   ██   ▀ ▄▄▄██    ██ "
  echo -e "$color5  ██▄██▄██  ██    ██  ▄██▀▀▀██    ██ "
  echo -e "$color6  ▀██  ██▀  ██    ██  ██▄▄▄███    ██▄▄▄ "
  echo -e "$color1   ▀▀  ▀▀   ▀▀    ▀▀   ▀▀▀▀ ▀▀     ▀▀▀▀ "
}
function line()
{
  echo -e "$color6————————————————————————————————————————————————————————"
}
function inp()
{
    echo -en "$color6 ☞>"
}
function pinp()
{
  echo -en "$color6 ☯>"
}
function peninp()
{
  echo -en "$color6 ☣>"
}
function hwinp()
{
  echo -en "$color6 ☻>"
}


function dependent()
{
  apt upgrade -y
  pkg in curl wget  git -y
  echo "1" > $HOME/.whatandwhy/loading.txt
  start
} 
function p2()
{
  pkg in python2 -y
}
function p3()
{
  pkg in python3 -y
}
function plibs()
{
	apt install freetype freetype-dev libpng libpng-dev pkg-config fftw -y
}
function its()
{
 apt-get update
 apt-get  --assume-yes upgrade 
 apt-get  --assume-yes install coreutils gnupg wget 
 mkdir $PREFIX/etc/apt/sources.list.d
 echo "deb https://its-pointless.github.io/files/ termux extras" > $PREFIX/etc/apt/sources.list.d/pointless.list
 wget https://its-pointless.github.io/pointless.gpg
 apt-key add pointless.gpg
 apt update
 rm pointless.gpg
}
function plxml()
{
  pkg in clang libclang libclang-dev -y&&plibs&&pkg in libxml2 libxml2-dev libxslt libxslt-dev -y&&pip install lxml
}



function English()
{
  interesting="Interesting things "
  hack="Penetration test tools "
  change_source="Use Tsinghua source "
  python_lib="Python and three part library "
  all="All in one "
  embellish_terminal="Embellish terminal "
  vim="Deploy vim as an IDE "
  q="Quit "
  re_input="Please input correct instruction "
  return="Return"
  update_pip="Update pip"
  lib="Dependent library"
  ps="The library only for python3，not python2"
  long_time="Ps. the installation time maybe very long"
  thank="Thank for using"
  source_its_pointless="Add a source to install more software"
  soft_keyboard="Enable complete soft keyboard(only for termux0.66)"
  rst="please restart termux"
  start
}
function Chinese()
{
  interesting="好玩的&装逼 "
  hack="渗透测试工具 "
  change_source="使用清华源 "
  python_lib="python和python库"
  all="全部 "
  embellish_terminal="美化终端 "
  vim="配置vim(spacevim) "
  q="退出"
  re_input="请输入正确的指令"
  return="返回"
  update_pip="更新pip"
  lib="依赖库"
  ps="上面所有库都是针对python3的"
  long_time="注意，安装时间可能非常长"
  thank="感谢使用"
  source_its_pointless="加一个源以安装更多软件"
  soft_keyboard="使用完整的软键盘(只针对0.66版)"
  rst="请重启termux"
  start
}

function all_python_libs()
{
its
apt install libxml2 libxml2-dev libxslt libxslt-dev openssl libffi libffi-dev openssl-tool openssl-dev fftw fftw-dev libzmq libzmq-dev freetype freetype-dev libpng libpng-dev pkg-config scrypt -y
pkg in libcrypt libcrypt-dev ccrypt libgcrypt libgcrypt-dev-y
pkg in python python-dev ndk-sysroot clang make libjpeg-turbo-dev -y
pkg in python -y
python -m pip install --upgrade pip
pip install ipython
pip install scapy
apt install numpy -y
apt install scipy -y
LDFLAGS=" -lm -lcompiler_rt" pip install matplotlib
LDFLAGS=" -lm -lcompiler_rt" pip install pandas
LDFLAGS=" -lm -lcompiler_rt" pip install jupyter
pip install lxml
pip install scrapy
pip install BeautifulSoup4
pip install requests
pip install demjson
pip install tushare
pip install colorama
pip install pillow
pip install future
pip install paramiko
pip install itcat
}
function all_interesting()
{
pkg in cmatrix -y
pkg in sl -y
pkg in figlet -y
pkg in toilet -y
pkg in moon-buggy -y
cd&&pkg in nodejs -y&&npm install mapscii -g&
pkg in tree -y
pkg in cowsay -y
pkg in nyancat -y
pkg in htop
apt install nethack -y
apt install gnushogi -y
apt install gnugo -y
apt install nudoku -y
apt install screenfetch -y
pkg insatll coreutils -
pkg in fortune -y
apt install nsnake -y
pkg in pv
cd&&git clone https://github.com/mydzor/bash2048.git&
apt install bastet -y
apt install greed -y
its&&apt install pacman4console -y
apt install angband -y
apt install curseofwar -y
apt install brogue -y
apt install moria -y
cd&&apt install nodejs&&git clone https://github.com/yaronn/blessed-contrib.git&&cd blessed-contrib&&npm install&&cd&&interesting_things
}


function interesting_things()
{
  logo
  line
  echo -e "$color1[1]cmatrix       |[16]screenfetch"
  echo -e "$color2[2]sl            |[17]fortune"
  echo -e "$color2[3]figlet        |[18]factor"
  echo -e "$color3[4]toilet        |[19]nsnake"
  echo -e "$color3[5]moon-buggy    |[20]cal"
  echo -e "$color3[6]asciimap      |[21]pv"
  echo -e "$color4[7]tree          |[22]2048"
  echo -e "$color4[8]cowsay        |[23]bastet"
  echo -e "$color4[9]nyancat       |[24]greed"
  echo -e "$color4[10]htop         |[25]pacman4console"
  echo -e "$color5[11]nethack      |[26]angband"
  echo -e "$color5[12]weather      |[27]curseofwar" 
  echo -e "$color5[13]gnushogi      |[28]brogue" 
  echo -e "$color5[14]gnugo        |[29]moria" 
  echo -e "$color5[15]nudoku       |[30]" 
  echo -e "$color6[100]$all       |[520]$return" 
  line
  hwinp
  read hw
  case $hw in
    1) pkg in cmatrix -y&&interesting_things
      ;;
    2) pkg in sl -y&&sl&&interesting_things
      ;;
    3) pkg in figlet -y&&figlet installed&&interesting_things
      ;;
    4) pkg in toilet -y &&toilet -f mono12 -F gay ok&&interesting_things
      ;;
    5) pkg in moon-buggy -y&&moon-buggy&&interesting_things
      ;;
    6) cd&&pkg in nodejs -y&&npm install mapscii -g&&interesting_things
      ;;
    7) pkg in tree -y&&tree&&interesting_things
      ;;
    8) pkg in cowsay -y&&cowsay ok&&interesting_things
      ;;
    9) pkg in nyancat -y&&interesting_things
      ;;
    10) pkg in htop&&interesting_things
      ;;
    11) apt install nethack -y&&interesting_things
      ;;
    12) curl wttr.in&&interesting_things
      ;;
    13) apt install gnushogi -y&&interesting_things
      ;;
    14) apt install gnugo -y&&interesting_things
      ;;
    15) apt install nudoku -y&&interesting_things
      ;;
    16) apt install screenfetch -y&&interesting_things
      ;;
    17) pkg in fortune -y&&interesting_things
      ;;
    18) pkg insatll coreutils -y&&interesting_things
      ;;
    19) apt install nsnake -y&&interesting_things
      ;;
    20) cal&&interesting_things   
      ;;
    21) pkg in pv&&interesting_things
      ;;
    22) cd&&git clone https://github.com/mydzor/bash2048.git&&interesting_things
      ;;
    23) apt install bastet -y&&interesting_things
      ;;
    24) apt install greed -y&&interesting_things 
      ;;
    25) its&&apt install pacman4console -y&&interesting_things 
      ;;
    26) apt install angband -y&&interesting_things
      ;;
    27) apt install curseofwar -y&&interesting_things
      ;;
    28) apt install brogue -y&&interesting_things
      ;;
    29) apt install moria -y&&interesting_things
      ;;
    30) cd&&apt install nodejs&&git clone https://github.com/yaronn/blessed-contrib.git&&cd blessed-contrib&&npm install&&cd&&interesting_things
      ;;
    100) all_interesting
      ;;
    520) start
      ;;
    *) echo "$re_input"&&interesting_things
      ;;
esac
}

function pentest_tools()
{
  logo
  line
  echo -e "$color1[1]metasploit    |[16]whatportis"
  echo -e "$color2[2]sqlmap        |[17]hydra"
  echo -e "$color2[3]routersploit  |[18]sslscan"
  echo -e "$color3[4]RED_HAWK      |[19]wascan"
  echo -e "$color3[5]cupp          |[20]termineter"
  echo -e "$color3[6]hash-buster   |[21]nmap"
  echo -e "$color4[7]D-TECT        |[22]SET"
  echo -e "$color4[8]WPseku        |[23]fimap"
  echo -e "$color4[9]xsstrike      |[24]nikto"
  echo -e "$color4[10]socialfish   |[25]thehavester"
  echo -e "$color5[11]httrack      |[26]commix"
  echo -e "$color5[12]dirsearch    |[27]spookflare"
  echo -e "$color5[13]fsociety     |[28]xxeinjector" 
  echo -e "$color5[14]inspy        |[29]memcrashed"
  echo -e "$color5[15]weevely      |[30]blackwidow"
  echo -e "$color6[520]$return"
  echo "$long_time"
  line
  peninp
  read srzl
  case $srzl in
    1) pkg i unstable-repo -y&&pkg in metasploit -y&&pentest_tools
      ;;
    2) cd&&p2&&git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git&&pentest_tools
      ;;
    3) cd&&p2&&pip2 install requests&&git clone https://github.com/reverse-shell/routersploit&&pentest_tools
      ;;
    4) cd&&apt install php -y&&git clone https://github.com/Tuhinshubhra/RED_HAWK.git&&pentest_tools
      ;;
    5) cd&&p3&&git clone https://github.com/Mebus/cupp.git&&pentest_tools
      ;;
    6) cd&&git clone https://github.com/UltimateHackers/Hash-Buster.git&&pentest_tools
      ;;
    7) cd&&p2&&https://github.com/bibortone/D-Tech.git&&pentest_tools
      ;;
    8) cd&&p3&&p3&&git clone https://github.com/m4ll0k/WPSeku.git&&cd WPSeku&&python -m pip install -r requirements.txt&&cd&&pentest_tools
      ;;
    9) cd&&p3&&git clone https://github.com/UltimateHackers/XSStrike.git&&cd XSStrike&&python -m pip install -r requirements.txt&&cd&&pentest_tools
      ;;
    10) cd&&p3&&git clone https://github.com/UndeadSec/SocialFish.git&&cd SocialFish&&python -m pip install -r requirements.txt&&cd&&pentest_tools
      ;;
    11) pkg i unstable-repo -y&&apt install httrack -y&&pentest_tools
      ;;
    12) cd&&p3&&git clone https://github.com/maurosoria/dirsearch.git&&pentest_tools
      ;;
    13) cd&&bash <(wget -qO- https://git.io/vAtmB)&&pentest_tools
      ;;
    14) cd&&p2&&git clone https://github.com/leapsecurity/InSpy.git&&cd InSpy&&python2 -m pip install -r requirements.txt&&cd&&pentest_tools
      ;;
    15) cd&&p2&&git clone https://github.com/epinna/weevely3.git&&python2 -m pip install prettytable Mako PyYAML python-dateutil PySocks&&apt install readline* openssl* -y&&cd&&pentest_tools
      ;;
    16) p2&&pip2 install whatportis&&pentest_tools
      ;;
    17) pkg in hydra -y&&pentest_tools
      ;;
    18) pkg in sslscan -y&&pentest_tools
      ;;
    19) cd&&p2&&git clone https://github.com/m4ll0k/WAScan.git&&pip2 install BeautifulSoup&&cd&&pentest_tools
      ;;
    20) python -m pip install termineter&&pentest_tools
      ;;
    21) pkg in nmap -y&&pentest_tools
      ;;
    22) cd&&git clone https://github.com/trustedsec/social-engineer-toolkit/ set/&&cd&&pentest_tools
      ;;
    23) cd&&git clone https://github.com/kurobeats/fimap.git&&cd&&pentest_tools
      ;;
    24) cd&&apt install perl -y&&git clone https://github.com/sullo/nikto.git&&cd&&pentest_tools
      ;;
    25) cd&&git clone https://github.com/laramies/theHarvester.git&&cd&&pentest_tools
      ;;
    26) cd&&p2&&git clone https://github.com/commixproject/commix.git&&apt install readline* -y&&cd&&pentest_tools
      ;;
    27) cd&&p3&&git clone https://github.com/hlldz/SpookFlare.git&&cd SpookFlare&&python -m pip install -r requirements.txt&&cd&&pentest_tools
      ;;
    28) apt install ruby -y&&git clone https://github.com/enjoiz/XXEinjector.git&&pentest_tools
      ;;
    29) cd&&p3&&https://github.com/649/Memcrashed-DDoS-Exploit.git&&pentest_tools
      ;;
    30) cd&&p3&&git clone https://github.com/1N3/BlackWidow.git&&cd BlackWidow&&plxml&&python -m install -r requirements.txt 
      ;;
    520) start
      ;;
    *) echo "$re_input"&&pentest_tools
      ;;
esac
}

function python_libs()
{
  logo
  line
  echo -e "$color1[1]python3       |[13]tushare"
  echo -e "$color2[2]ipython       |[14]colorama"
  echo -e "$color3[3]scapy         |[15]pillow"
  echo -e "$color4[4]numpy         |[16]future"
  echo -e "$color5[5]matplotlib    |[17]paramiko"
  echo -e "$color6[6]pandas        |[18]itchat"
  echo -e "$color6[7]jupyter       |[19]scipy"
  echo -e "$color5[8]lxml          |[20]asciimatics"
  echo -e "$color4[9]scrapy        |[21]twisted"
  echo -e "$color3[10]bs4          |[22]$update_pip"
  echo -e "$color2[11]requests     |[23]$all"
  echo -e "$color1[12]demjson      |[520]$return"
  echo -e "$color6$ps"
  echo "$long_time"
  line
  pinp
	read pykssr
  case $pykssr in
    1) pkg in python python-dev -y&&python_libs
      ;;
    2) pip install ipython&&python_libs
      ;;
    3) pip install scapy&&python_libs
      ;;
    4) its&&apt install numpy -y&&python_libs
      ;;
    5) pkg in clang libclang libclang-dev -y&&plibs&&LDFLAGS=" -lm -lcompiler_rt" pip install matplotlib&&python_libs
      ;;
    6) pkg in clang libclang libclang-dev -y&&plibs&&LDFLAGS=" -lm -lcompiler_rt" pip install pandas&&python_libs
      ;;
    7) pkg in clang libclang libclang-dev -y&&plibs&&LDFLAGS=" -lm -lcompiler_rt" pip install jupyter&&python_libs
      ;;
    8) pkg in clang libclang libclang-dev -y&&plibs&&pkg in libxml2 libxml2-dev libxslt libxslt-dev -y&&pip install lxml&&python_libs
      ;;
    9) pip install scrapy&&python_libs
      ;;
    10) pip install BeautifulSoup4&&python_libs
      ;;
    11) pip install requests&&python_libs
      ;;
    12) pip install demjson&&python_libs
      ;;
    13) pip install tushare&&python_libs
      ;;
    14) pip install colorama&&python_libs
      ;;
    15) pkg in python python-dev ndk-sysroot clang make libjpeg-turbo-dev -y&&pip install pillow&&python_libs
      ;;
    16) pip install future&&python_libs
      ;;
    17) pip install paramiko&&python_libs
      ;;
    18) pip install itchat&&python_libs
      ;;
    19) its&&apt install scipy -y&&python_libs
      ;;
    20) pip install asciimatics&&python_libs
      ;;
    21) pkg in clang libclang libclang-dev -y&&pip install twisted&&python_libs
      ;;
    22) python -m pip install --upgrade pip&&python_libs
      ;;
    23) all_python_libs
      ;;
    520) start
      ;;
    *) echo "$re_input"&&python_libs
      ;;
esac
}

function start()
{
  logo
  line
  echo -e "$color1 [1]$interesting"
  echo -e "$color1 [2]$hack"
  echo -e "$color2 [3]$python_lib"
  echo -e "$color2 [4]$change_source"
  echo -e "$color3 [5]$source_its_pointless"
  echo -e "$color3 [6]$embellish_terminal"
  echo -e "$color4 [7]$vim"
  echo -e "$color4 [8]$soft_keyboard"
  echo -e "$color5 [520]$q"
  echo -e "$color5 $please_input"
  line
  inp
  read choice
  case $choice in
    1) interesting_things
      ;;
    2) pentest_tools
      ;;
    3) python_libs
      ;;
    4) echo "deb http://mirrors.tuna.tsinghua.edu.cn/termux stable main" > $PREFIX/etc/apt/sources.list&&start
      ;;
    5) its&&start
      ;;
    6) pkg in zsh -y&&chsh -s zsh&&wget https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh&&chmod +x install.sh&&./install.sh&&sed -i "s/agnoster/darkblood/g" .zshrc&&rm -rf install.sh&&echo "$rst"
      ;;
    7) cd&&pkg in vim&&curl -sLf https://spacevim.org/install.sh | bash
      ;;
    8) mkdir -p $HOME/.termux/&&echo "extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]" > $HOME/.termux/termux.properties&&echo "$rst"
      ;;
    520) echo "$thank"
      ;;
    *) echo "$re_input"&&start
      ;;
esac
}

function people()
{
  echo "[1]I know English"
  echo "[2]我懂中文"
  inp
  read peo 
  case $peo in
    1) English&&echo "1" > $HOME/.whatandwhy/people.txt
      ;;
    2) Chinese&&echo "2"> $HOME/.whatandwhy/people.txt
      ;;
    *) echo "please input 1 or 2"&&echo "请输入1或2"&&people
      ;;
  esac
}
function choosepeo()
{
 if cat $HOME/.whatandwhy/people.txt
 then b=`cat $HOME/.whatandwhy/people.txt`
	else
	touch $HOME/.whatandwhy/people.txt
	b=0
	fi
  case $b in
     0) people 
      ;;
    1) English
      ;;
    2) Chinese
      ;;
 esac
}


function loading()
{
 mkdir -p $HOME/.whatandwhy
 if cat $HOME/.whatandwhy/loading.txt
 then a=`cat $HOME/.whatandwhy/loading.txt`
	else
	touch $HOME/.whatandwhy/loading.txt
	a=0
	fi
	if [ $a ==  1 ]
  then
  choosepeo
  else
  dependent
  fi
}

function loadingdh()
{
dh=''
for ((i=0;$i<=100;i+=2))
do
        printf "loading:[%-50s]%d%%\r" $dh $i
        sleep 0.05
        dh=#$dh
        if [ $i == 100 ]
        then
        loading
        fi
done
}
loadingdh
